name: Flutter Multi-Platform Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  FLUTTER_VERSION: "3.32.8" # Flutter SDK version with Dart 3.18.1

jobs:
  android-apk:
    name: Build Android APK
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          
      - name: Disable analytics
        run: flutter config --no-analytics
      
      - name: Get dependencies
        run: flutter pub get
      
      - name: Build APK
        run: flutter build apk --release --split-per-abi
      
      - name: Verify APK files
        run: ls -la build/app/outputs/flutter-apk/
      
      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apks
          path: build/app/outputs/flutter-apk/*.apk

  android-appbundle:
    name: Build Android AppBundle
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          
      - name: Get dependencies
        run: flutter pub get
      
      - name: Build AppBundle
        run: flutter build appbundle --release
      
      - name: Verify AppBundle
        run: ls -la build/app/outputs/bundle/release/
      
      - name: Upload AppBundle
        uses: actions/upload-artifact@v4
        with:
          name: android-appbundle
          path: build/app/outputs/bundle/release/app-release.aab

  windows-exe:
    name: Build Windows EXE
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          
      - name: Get dependencies
        run: flutter pub get
      
      - name: Build Windows
        run: flutter build windows --release
      
      - name: Verify Windows build (PowerShell)
        shell: pwsh
        run: |
          $releaseDir = "build\windows\runner\Release"
          if (-not (Test-Path -Path $releaseDir)) {
              Write-Output "::error::Release directory not found at $releaseDir"
              exit 1
          }
          
          $exeFiles = Get-ChildItem -Path $releaseDir -Filter *.exe
          if ($exeFiles.Count -eq 0) {
              Write-Output "::error::No EXE files found in $releaseDir"
              exit 1
          }
          
          Write-Output "Found EXE files:"
          $exeFiles | ForEach-Object { Write-Output $_.FullName }
      
      - name: Package Windows build (PowerShell)
        shell: pwsh
        run: |
          $releaseDir = "build\windows\runner\Release"
          $zipPath = "windows_build.zip"
          
          if (Test-Path $zipPath) {
              Remove-Item $zipPath
          }
          
          try {
              Compress-Archive -Path "$releaseDir\*" -DestinationPath $zipPath
              Write-Output "Created archive at $zipPath"
          } catch {
              Write-Output "::error::Failed to create archive: $_"
              exit 1
          }
      
      - name: Upload Windows EXE
        uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: windows_build.zip

  linux-app:
    name: Build Linux App
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang \
            cmake \
            ninja-build \
            pkg-config \
            libgtk-3-dev \
            liblzma-dev \
            libstdc++-12-dev
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          
      - name: Get dependencies
        run: flutter pub get
      
      - name: Build Linux
        run: flutter build linux --release
      
      - name: Verify Linux build
        run: |
          echo "Build contents:"
          ls -la build/linux/x64/release/bundle/
          if [ ! -d "build/linux/x64/release/bundle" ]; then
            echo "::error::Linux build directory not found"
            exit 1
          fi
      
      - name: Package Linux build
        run: |
          mkdir -p linux_package
          cp -r build/linux/x64/release/bundle/* linux_package/
          tar -czvf linux_build.tar.gz -C linux_package .
      
      - name: Upload Linux App
        uses: actions/upload-artifact@v4
        with:
          name: linux-app
          path: linux_build.tar.gz

  web-build:
    name: Build Web App
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          
      - name: Get dependencies
        run: flutter pub get
      
      - name: Build Web
        run: flutter build web --release --pwa-strategy=none
      
      - name: Verify Web build
        run: |
          echo "Web build contents:"
          ls -la build/web/
          if [ ! -d "build/web" ]; then
            echo "::error::Web build directory not found"
            exit 1
          fi
      
      - name: Package Web build
        run: zip -r web_build.zip build/web/
      
      - name: Upload Web App
        uses: actions/upload-artifact@v4
        with:
          name: web-app
          path: web_build.zip

  ios-build:
    name: Build iOS App
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          
      - name: Get dependencies
        run: flutter pub get
      
      - name: Build iOS (no codesign)
        run: flutter build ios --release --no-codesign
      
      - name: Verify iOS build
        run: |
          echo "iOS build contents:"
          ls -la build/ios/Release-iphoneos/
          if [ ! -d "build/ios/Release-iphoneos" ]; then
            echo "::error::iOS build directory not found"
            exit 1
          fi
      
      - name: Package iOS build
        run: |
          mkdir -p ios_package
          cp -r build/ios/Release-iphoneos/* ios_package/
          zip -r ios_build.zip ios_package/
      
      - name: Upload iOS App
        uses: actions/upload-artifact@v4
        with:
          name: ios-app
          path: ios_build.zip
