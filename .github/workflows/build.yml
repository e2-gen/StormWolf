name: Flutter Multi-Platform Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-24.04
    outputs:
      flutter-version: ${{ steps.set-version.outputs.flutter-version }}
    steps:
      - uses: actions/checkout@v4
      - name: Set required Flutter version
        id: set-version
        run: |
          echo "flutter-version=3.32.8" >> $GITHUB_OUTPUT
          echo "Selected Flutter version 3.32.8 which includes Dart SDK 3.18.1"

  build:
    needs: setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-14]
        include:
          - os: ubuntu-24.04
            platform: linux
            artifact-name: linux-app
          - os: windows-2022
            platform: windows
            artifact-name: windows-app
          - os: macos-14
            platform: ios
            artifact-name: ios-app
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ needs.setup.outputs.flutter-version }}
          channel: stable
          
      - name: Disable analytics
        run: flutter config --no-analytics
      
      - name: Install Linux dependencies (Linux only)
        if: matrix.os == 'ubuntu-24.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang \
            cmake \
            ninja-build \
            pkg-config \
            libgtk-3-dev \
            liblzma-dev \
            libstdc++-12-dev
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Verify Flutter version
        run: flutter --version
      
      - name: Build for ${{ matrix.platform }}
        run: |
          if [ "${{ matrix.platform }}" == "ios" ]; then
            flutter build ios --release --no-codesign
          else
            flutter build ${{ matrix.platform }} --release
          fi
      
      - name: Prepare artifacts
        run: |
          mkdir -p artifacts
          if [ "${{ matrix.platform }}" == "windows" ]; then
            cd build/windows/runner/Release
            zip -r ../../../../artifacts/release.zip ./*
          elif [ "${{ matrix.platform }}" == "ios" ]; then
            cp -r build/ios/Release-iphoneos/* artifacts/
          else
            cp -r build/${{ matrix.platform }}/release/* artifacts/
          fi
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: artifacts/

  web-build:
    needs: setup
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ needs.setup.outputs.flutter-version }}
          channel: stable
          
      - name: Disable analytics
        run: flutter config --no-analytics
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build Web
        run: flutter build web --release
      
      - name: Prepare web artifacts
        run: |
          mkdir -p web-artifacts
          cp -r build/web/* web-artifacts/
      
      - name: Upload web artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-app
          path: web-artifacts/